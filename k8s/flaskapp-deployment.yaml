apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: flaskapp
  name: flaskapp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flaskapp
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/db-nw: "true"
        io.kompose.network/web-nw: "true"
        io.kompose.service: flaskapp
    spec:
      containers:
      - env:
        - name: APP_SECRET_KEY
          value: secret
        - name: POSTGRES_DB
          value: flaskapp-db
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_USER
          value: postgres
        - name: ROCKET_CHAT_PASSWORD
          value: weakServicePassword
        - name: ROCKET_CHAT_USER
          value: service-user
        image: flaskapp
        imagePullPolicy: ""
        name: flaskapp
        resources: {}
        volumeMounts:
        - mountPath: /opt/services/flaskapp/src
          name: flaskapp-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: flaskapp-claim0
        persistentVolumeClaim:
          claimName: flaskapp-claim0
status: {}
